version: "3.3"

services:

  # docker metrics collector
  cadvisor:
    image: gcr.io/google-containers/cadvisor:latest
    container_name: cadvisor
    expose:
      - 8080
    labels:
      - "org.label-schema.group=monitoring"
    networks:
      - reverse-proxy
      - reverse-proxy-metrics
      - default
    privileged: true
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux

  # visualize metrics
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    labels:
      - "org.label-schema.group=monitoring"
      - "traefik.docker.network=reverse-proxy"
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
    networks:
      - reverse-proxy
      - reverse-proxy-metrics
      - default
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  # host metrics collector
  nodeexporter:
    image: prom/node-exporter:latest
    container_name: nodeexporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    labels:
      - "org.label-schema.group=monitoring"
    networks:
      - reverse-proxy
      - reverse-proxy-metrics
      - default
    privileged: true
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro

  # metrics database
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    labels:
      - "org.label-schema.group=monitoring"
    networks:
      - reverse-proxy
      - reverse-proxy-metrics
      - default
    restart: unless-stopped
    volumes:
      - "./prometheus:/etc/prometheus"
      - "prometheus_data:/prometheus"
  
  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    expose:
      - 9000
    labels:
      - "org.label-schema.group=monitoring"
      - "traefik.docker.network=reverse-proxy"
      - "traefik.http.routers.portainer.rule=Host(`portainer.localhost`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls=true"
    networks:
      - reverse-proxy
      - reverse-proxy-metrics
      - default
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data


networks:
  reverse-proxy:
    external: true
  reverse-proxy-metrics:
    external: true


volumes:
  grafana_data:
  prometheus_data:
  portainer_data:
